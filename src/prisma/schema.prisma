// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id              String               @id @default(uuid())
  username             String
  firstname            String
  lastname             String
  password             String
  email                String
  role                 UserRole
  contact              String?
  gender               Gender
  latitude             Float?
  longitude            Float?
  company              Company?             @relation(fields: [company_id], references: [company_id])
  company_id           String?
  team                 Team?                @relation(fields: [team_id], references: [team_id])
  team_id              String?
  sample_distributions SampleDistribution[]
  daily_activities     DailyActivity[]
  daily_plans          DailyPlan[]
  monthly_plans        MonthlyPlan[]
  facility             Facility[]
  supervisor_profile   SupervisorProfile?
  supervisor_id        String?              @unique
  manager_profile      ManagerProfile?
  manager_id           String?              @unique
  medical_rep_profile  MedicalRepProfile?
  medical_rep_id       String?              @unique
}

model SupervisorProfile {
  profile_id    String     @id @default(uuid())
  bio           String?
  user          User       @relation(fields: [userUser_id], references: [user_id])
  userUser_id   String     @unique
  supervisor    Supervisor @relation(fields: [supervisor_id], references: [supervisor_id])
  supervisor_id String
}

model ManagerProfile {
  profile_id        String  @id @default(uuid())
  bio               String?
  user              User    @relation(fields: [userUser_id], references: [user_id])
  manager           Manager @relation(fields: [managerManager_id], references: [manager_id])
  userUser_id       String  @unique
  managerManager_id String
}

model MedicalRepProfile {
  profile_id               String     @id @default(uuid())
  bio                      String?
  user                     User       @relation(fields: [userUser_id], references: [user_id])
  medRep                   MedicalRep @relation(fields: [medicalRepMedical_rep_id], references: [medical_rep_id])
  userUser_id              String     @unique
  medicalRepMedical_rep_id String
}

model Profile {
  profile_id String  @id @default(uuid())
  bio        String?
  doctor     Doctor? @relation(fields: [doctor_id], references: [doctor_id])
  doctor_id  String? @unique
  gender     Gender
}

model Supervisor {
  supervisor_id      String              @id @default(uuid())
  supervisor_name    String
  supervisor_profile SupervisorProfile[]
}

model Manager {
  manager_id   String @id @default(uuid())
  manager_name String

  ManagerProfile ManagerProfile[]
}

model MedicalRep {
  medical_rep_id    String              @id @default(uuid())
  medical_rep_name  String
  MedicalRepProfile MedicalRepProfile[]
}

model Company {
  company_id   String    @id @default(uuid())
  company_name String
  location     String
  latitude     Float?
  longitude    Float?
  products     Product[]
  users        User[]
}

model Product {
  product_id           String               @id @default(uuid())
  product_name         String
  company_id           String
  company              Company              @relation(fields: [company_id], references: [company_id])
  stock_trackings      StockTracking[]
  team_products        TeamProduct[]
  sample_distributions SampleDistribution[]
  daily_activities     DailyActivity[]      @relation("generalProducts")
  focused_activities   DailyActivity[]      @relation("focussedProduct")
}

model Doctor {
  doctor_id            String               @id @default(uuid())
  doctor_name          String
  speciality           String[]
  facility             Facility[]
  location             String
  town                 String
  contact              String?
  sample_distributions SampleDistribution[]
  dailyActiviy         DailyActivity[]
  profile              Profile?
}

model Pharmacy {
  pharmacy_id      String          @id @default(uuid())
  pharmacy_name    String
  location         String
  description      String?
  stock_trackings  StockTracking[]
  daily_activities DailyActivity[]
}

model Team {
  team_id          String          @id @default(uuid())
  team_name        String
  users            User[]
  team_products    TeamProduct[]
  daily_activities DailyActivity[]
  monthly_plans    MonthlyPlan[]
}

model TeamProduct {
  team_id    String
  product_id String
  team       Team    @relation(fields: [team_id], references: [team_id])
  product    Product @relation(fields: [product_id], references: [product_id])

  @@id([team_id, product_id])
}

model StockTracking {
  pharmacy_id String
  product_id  String
  month       Int
  year        Int
  quantity    Int

  pharmacy Pharmacy @relation(fields: [pharmacy_id], references: [pharmacy_id])
  product  Product  @relation(fields: [product_id], references: [product_id])

  @@id([pharmacy_id, product_id, month, year])
}

model SampleDistribution {
  user          User     @relation(fields: [user_id], references: [user_id])
  user_id       String
  doctor        Doctor   @relation(fields: [doctor_id], references: [doctor_id])
  doctor_id     String
  product       Product  @relation(fields: [product_id], references: [product_id])
  product_id    String
  samples_given Int
  date          DateTime

  @@id([user_id, doctor_id, product_id, date])
}

model DailyActivity {
  id                 String   @id @default(uuid())
  user               User     @relation(fields: [user_id], references: [user_id])
  user_id            String
  product            Product  @relation("generalProducts", fields: [product_id], references: [product_id])
  product_id         String
  doctor             Doctor   @relation(fields: [doctor_id], references: [doctor_id])
  doctor_id          String
  pharmacy           Pharmacy @relation(fields: [pharmacy_id], references: [pharmacy_id])
  pharmacy_id        String
  date               DateTime
  doctors_met        Int
  products_detailed  Int
  samples_given      Int
  focused_product    Product  @relation("focussedProduct", fields: [focused_product_id], references: [product_id])
  focused_product_id String
  pharmacies_visited Int
  team               Team[]
}

model DailyPlan {
  user       User     @relation(fields: [user_id], references: [user_id])
  user_id    String
  date       DateTime
  activities String

  @@id([user_id, date])
}

model MonthlyPlan {
  id         String @id @default(uuid())
  user       User   @relation(fields: [user_id], references: [user_id])
  user_id    String
  month      Int
  year       Int
  activities String
  team       Team[]
}

model Facility {
  facility_id String   @id @default(uuid())
  name        String
  location    String
  description String?
  latitude    Float?
  longitude   Float?
  doctors     Doctor[]
  users       User[]
}

enum UserRole {
  Supervisor
  Manager
  MedicalRep
  USER
  COUNTRY_MGR
}

enum Gender {
  MALE
  FEMALE
  OTHER
}
